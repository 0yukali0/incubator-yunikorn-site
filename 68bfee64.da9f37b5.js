(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{131:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=a.a.createContext({}),l=function(e){var t=a.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=l(e.components);return a.a.createElement(u.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(n),m=r,d=p["".concat(i,".").concat(m)]||p[m]||b[m]||o;return n?a.a.createElement(d,c(c({ref:t},u),{},{components:n})):a.a.createElement(d,c({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var u=2;u<o;u++)i[u]=n[u];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},84:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return l}));var r=n(2),a=n(6),o=(n(0),n(131)),i={id:"roadmap",title:"Roadmap"},c={type:"mdx",permalink:"/community/roadmap",source:"@site/src/pages/community/roadmap.md"},s=[{value:"What&#39;s next",id:"whats-next",children:[]},{value:"v0.9.0",id:"v090",children:[{value:"Resource Quota Management",id:"resource-quota-management",children:[]},{value:"Job Ordering Policy: StateAware (optimized FIFO)",id:"job-ordering-policy-stateaware-optimized-fifo",children:[]},{value:"Work with the cluster-autoscaler",id:"work-with-the-cluster-autoscaler",children:[]},{value:"Even cache system",id:"even-cache-system",children:[]},{value:"More comprehensive web UI",id:"more-comprehensive-web-ui",children:[]}]},{value:"v0.8.0 (May 4, 2020)",id:"v080-may-4-2020",children:[]}],u={rightToc:s};function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"roadmap"},"RoadMap"),Object(o.b)("h2",{id:"whats-next"},"What's next"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Kubernetes 1.16/1.17 support"),Object(o.b)("li",{parentName:"ul"},"Gang scheduling"),Object(o.b)("li",{parentName:"ul"},"App tracking API and CRD"),Object(o.b)("li",{parentName:"ul"},"Preemption phase 2"),Object(o.b)("li",{parentName:"ul"},"App/task priority support"),Object(o.b)("li",{parentName:"ul"},"Support spot instances for Spark scheduling"),Object(o.b)("li",{parentName:"ul"},"Web UI refurbishment")),Object(o.b)("h2",{id:"v090"},"v0.9.0"),Object(o.b)("p",null,"In this version, the Apache YuniKorn (Incubating) community is focusing on improving the user experience, and usability\nto running Apache Spark and Flink workloads. The main features delivered in this release includes:"),Object(o.b)("h3",{id:"resource-quota-management"},"Resource Quota Management"),Object(o.b)("p",null,"This version YuniKorn provides a seamless way to manage resource quota for a Kubernetes cluster, it can work as an\nalternative to the ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://kubernetes.io/docs/concepts/policy/resource-quotas/"}),"namespace resource quota"),". There are\n2 main advantages of using this feature comparing to the namespace resource quota:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"The namespace resource quota is counting resources at the admission phase, irrespective of the pod is using the resources or not.\nThis can lead up to issues that the namespace resources could not be efficiently used."),Object(o.b)("li",{parentName:"ol"},"The namespace resource quota is flat, it doesn't support hierarchy resource quota management."),Object(o.b)("li",{parentName:"ol"},"The resource quota admission controller rejects the pods as long as it goes over the quota, this increases the complexity\nof the client side code.")),Object(o.b)("p",null,"By using the resource quota management provided by YuniKorn, it is more efficient, seamlessly setup and it provides the\njob queue to handle common scheduling ordering requirements."),Object(o.b)("h3",{id:"job-ordering-policy-stateaware-optimized-fifo"},"Job Ordering Policy: StateAware (optimized FIFO)"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"StateAware")," app sorting policy orders jobs in a queue in FIFO order, and schedule them one by one on conditions.\nThe condition is to wait for the application enters a runnable state. This avoids the common race condition while submitting\nlots of batch jobs, e.g Spark, to a single namespace (or cluster). By enforcing the certain ordering of jobs, it also improves\nthe scheduling of jobs to be more predictable. More explanation of this feature can be found in doc here."),Object(o.b)("h3",{id:"work-with-the-cluster-autoscaler"},"Work with the cluster-autoscaler"),Object(o.b)("p",null,"In this release, YuniKorn has been tested heavily to work nicely with the Kubernetes ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/kubernetes/autoscaler/tree/master/cluster-autoscaler"}),"cluster-autoscaler"),".\nIt brings the maximum elasticity to the Kubernetes cluster by working efficiently with the cluster-autoscaler. Some bugs\nare fixed and some improvements are done in this release."),Object(o.b)("h3",{id:"even-cache-system"},"Even cache system"),Object(o.b)("p",null,"In this release, an efficient even cache system is added into the scheduler. This system caches some key scheduling\nevents in a memory store and publishes them to Kubernetes event system when needed. More scheduling events are visible\ndirectly from Kubernetes by using kubectl command. This helps to improve the usability and debuggability a lot."),Object(o.b)("h3",{id:"more-comprehensive-web-ui"},"More comprehensive web UI"),Object(o.b)("p",null,"YuniKorn UI provides a better centralized view for resource management. An nodes page has been added to the UI, to display\nthe detailed nodes info in the cluster. The apps page has been enhanced, it now provides a search box to search apps by\nqueue or application ID."),Object(o.b)("h2",{id:"v080-may-4-2020"},"v0.8.0 (May 4, 2020)"),Object(o.b)("p",null,"This release ships a fully functional resource scheduler for Kubernetes with a number of useful features that empower\nto run Big Data workloads on K8s. See more at ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"http://yunikorn.apache.org/docs/get_started/release_notes#release-notes-v080"}),"Release Notes"),"."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"yunikorn-scheduler-interface")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Communication protocols between RM and scheduler-shim."),Object(o.b)("li",{parentName:"ul"},"gRPC interfaces."),Object(o.b)("li",{parentName:"ul"},"Scheduler plugin interfaces.")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"yunikorn-core")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Hierarchy queues with min/max resource quotas."),Object(o.b)("li",{parentName:"ul"},"Resource fairness between queues, users and apps."),Object(o.b)("li",{parentName:"ul"},"Cross-queue preemption based on fairness."),Object(o.b)("li",{parentName:"ul"},"Fair/Bin-packing scheduling policies."),Object(o.b)("li",{parentName:"ul"},"Placement rules (auto queue creation/mapping)."),Object(o.b)("li",{parentName:"ul"},"Customized resource types (like GPU) scheduling support."),Object(o.b)("li",{parentName:"ul"},"Rich placement constraints support."),Object(o.b)("li",{parentName:"ul"},"Automatically map incoming container requests to queues by policies."),Object(o.b)("li",{parentName:"ul"},"Node partition: partition cluster to sub-clusters with dedicated quota/ACL management."),Object(o.b)("li",{parentName:"ul"},"Configuration hot-refresh."),Object(o.b)("li",{parentName:"ul"},"Stateful recovery."),Object(o.b)("li",{parentName:"ul"},"Metrics framework.")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"yunikorn-k8shim")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Support K8s predicates. Such as pod affinity/anti-affinity, node selectors."),Object(o.b)("li",{parentName:"ul"},"Support Persistent Volumes, Persistent Volume Claims, etc."),Object(o.b)("li",{parentName:"ul"},"Load scheduler configuration from configmap dynamically (hot-refresh)."),Object(o.b)("li",{parentName:"ul"},"3rd Operator/controller integration, pluggable app discovery."),Object(o.b)("li",{parentName:"ul"},"Helm chart support.")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"yunikorn-web")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Cluster overview page with brief info about the cluster."),Object(o.b)("li",{parentName:"ul"},"Read-only application view, including app info and task breakdown info."),Object(o.b)("li",{parentName:"ul"},"Read-only queue view, displaying queue structure, queue resource, usage info dynamically.")))}l.isMDXComponent=!0}}]);